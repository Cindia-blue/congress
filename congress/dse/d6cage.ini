#
#    DSE configuration file - used at initial startup
#
#
# Format:
#    [toplevel category]
#        [[entry]]
#          [[[arguments for entry]]]
#


# 'd6cage' is the toplevel python script configuration parameters
#
[d6cage]
keys = python.d6cage,
description=deepsix python cage



# These are the python modules d6cage will load..
# This section effectively just loads the classes into sys.modules  There is only one argument: "filename=blah.py"
#
# [modules]
#
# [[blah]]
# filename=blah.py
#

[modules]


# The next section are specific instantions of previously loaded modules
# The name of the service in "[[blah]]" is the primary AMQP routing key for the instance.
# If you only specify a single additional key, make sure there is a trailing comma "keys=blah,"
# ARGS are passed to "init" as a dictionary called "args"
#
#
# [services]
#
# [[blahsvc]]
# keys = foo.blahsvc,
# description = "Foo blahsvc"
# moduleName = blah
#
# [[[args]]]
# url = http://127.0.0.1:8080/foo
# user = admin
# pass = pass
#
# <...in module "blah.py"...>
#
# class d6service(deepSix):
#     def __init__(self, name, keys, inbox, dataPath, args={}):
#        deepSix.__init__(self, name, keys, inbox, dataPath)
#
#        self.url = args['url']
#        self.user = args['user']
#        self.pass = args['pass']
#
# NOTE: When writing modules, you should avoid calling methods from within init...
#

[services]
